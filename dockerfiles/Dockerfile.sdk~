# This file describes the standard way to build a CROPS toolchain image
#
# Usage:
#
#
# 2) Build your toolchain image with the following command replacing my_tag with your target arch
# docker build -t crops/toolchain:my_tag -f Dockerfile.toolchain ../
#
# Example for i586 target:
# docker build -t crops/toolchain-i586:2.1 -f Dockerfile.toolchain --build-arg TARGET=i586 --build-arg RELEASE=2.1 ../
#
# or scripts/build_containers.sdk will build all of them
#

FROM toolchain:deps
MAINTAINER Todor Minchev <todor.minchev@linux.intel.com>

ARG TARGET
ARG RELEASE

# Build and install turff
RUN mkdir -p /usr/local/crops/turff/
COPY turff /usr/local/crops/turff/
COPY utils.[ch] /usr/local/crops/
COPY globals.[ch] /usr/local/crops/

RUN cd /usr/local/crops/turff && \
	make && \
	mkdir -p /bin/turff && \
	cp /usr/local/crops/turff/turff /bin/turff/run && \
	cp /usr/local/crops/turff/turff_launcher /bin/

# Download and install toolchain
RUN wget -q -P /tmp http://downloads.yoctoproject.org/releases/yocto/yocto-${RELEASE}/toolchain/x86_64/poky-glibc-x86_64-core-image-sato-${TARGET}-toolchain-${RELEASE}.sh && \
	cd /tmp &&	\
	chmod 755 ./poky-glibc-x86_64-core-image-sato-${TARGET}-toolchain-${RELEASE}.sh &&	\
	./poky-glibc-x86_64-core-image-sato-${TARGET}-toolchain-${RELEASE}.sh -d /opt/poky/ -y && \
	chmod 755 /opt/poky/environment-setup*


# Container entry point
ENTRYPOINT ["/bin/turff_launcher", "-f", "/opt/poky/environment-setup*"]
